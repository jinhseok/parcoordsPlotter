x
y<-rnorm(20, 30, 5)
y
dataf<-cbind(x,y)
dataf %>%
select(x,y) %>%
parcoords(
rownames = F# turn off rownames from the data.frame
, brushMode = "1d-axes"
, reorderable = T
, queue = F
, color = list(
colorBy = "y2mbT2"
,colorScale = htmlwidgets::JS("d3.scale.linear().domain([60,150]).range(['yellow','steelblue']).interpolate(d3.interpolateLab)")
)
# ,width=2200, height=1200 #for external display
,width=300, height=300 #for MBA display
)
dataf %>%
select(x,y) %>%
parcoords(
rownames = F# turn off rownames from the data.frame
, brushMode = "1d-axes"
, reorderable = T
, queue = F
, color = list(
# colorBy = "y2mbT2"
,colorScale = htmlwidgets::JS("d3.scale.linear().domain([60,150]).range(['yellow','steelblue']).interpolate(d3.interpolateLab)")
)
# ,width=2200, height=1200 #for external display
,width=300, height=300 #for MBA display
)
dataf
dataf<-as.data.frame(dataf)
dataf %>%
select(x,y) %>%
parcoords(
rownames = F# turn off rownames from the data.frame
, brushMode = "1d-axes"
, reorderable = T
, queue = F
, color = list(
# colorBy = "y2mbT2"
,colorScale = htmlwidgets::JS("d3.scale.linear().domain([60,150]).range(['yellow','steelblue']).interpolate(d3.interpolateLab)")
)
# ,width=2200, height=1200 #for external display
,width=300, height=300 #for MBA display
)
dataf %>%
select(x,y) %>%
parcoords(
rownames = F# turn off rownames from the data.frame
, brushMode = "1d-axes"
, reorderable = T
, queue = F
, color = list(
# colorBy = "y2mbT2"
,colorScale = htmlwidgets::JS("d3.scale.linear().domain([0,10]).range(['yellow','steelblue']).interpolate(d3.interpolateLab)")
)
# ,width=2200, height=1200 #for external display
,width=300, height=300 #for MBA display
)
dataf %>%
select(x,y) %>%
parcoords(
rownames = F# turn off rownames from the data.frame
, brushMode = "1d-axes"
, reorderable = T
, queue = F
, color = list(
colorBy = "x"
,colorScale = htmlwidgets::JS("d3.scale.linear().domain([0,10]).range(['yellow','steelblue']).interpolate(d3.interpolateLab)")
)
# ,width=2200, height=1200 #for external display
,width=300, height=300 #for MBA display
)
x[1]
x[1]<-NA
x
dataf<-cbind(x,y)
dataf %>%
select(x,y) %>%
parcoords(
rownames = F# turn off rownames from the data.frame
, brushMode = "1d-axes"
, reorderable = T
, queue = F
, color = list(
colorBy = "x"
,colorScale = htmlwidgets::JS("d3.scale.linear().domain([0,10]).range(['yellow','steelblue']).interpolate(d3.interpolateLab)")
)
# ,width=2200, height=1200 #for external display
,width=300, height=300 #for MBA display
)
dataf<-as.data.frame(dataf)
dataf %>%
select(x,y) %>%
parcoords(
rownames = F# turn off rownames from the data.frame
, brushMode = "1d-axes"
, reorderable = T
, queue = F
, color = list(
colorBy = "x"
,colorScale = htmlwidgets::JS("d3.scale.linear().domain([0,10]).range(['yellow','steelblue']).interpolate(d3.interpolateLab)")
)
# ,width=2200, height=1200 #for external display
,width=300, height=300 #for MBA display
)
x
x[1]<-67
x[2]<-NA
x
dataf<-as.data.frame(cbind(x,y))
dataf %>%
select(x,y) %>%
parcoords(
rownames = F# turn off rownames from the data.frame
, brushMode = "1d-axes"
, reorderable = T
, queue = F
, color = list(
colorBy = "x"
,colorScale = htmlwidgets::JS("d3.scale.linear().domain([0,10]).range(['yellow','steelblue']).interpolate(d3.interpolateLab)")
)
# ,width=2200, height=1200 #for external display
,width=300, height=300 #for MBA display
)
range(x,na.rm=T)
y[1]
shiny::runApp('~/Desktop/Analysis/PS_Parcoords')
source("moveMe.R")
data<-read.csv(file="ABCY1Y2MI.csv")
setwd("~/Desktop/Analysis/PS_Parcoords/")
data<-read.csv(file="ABCY1Y2MI.csv")
data$pareduc<-ifelse(!is.na(data$dadeduc)&!is.na(data$momeduc), ifelse(data$dadeduc>=data$momeduc, data$dadeduc, data$momeduc), ifelse(!is.na(data$dadeduc)&is.na(data$momeduc),data$dadeduc,ifelse(is.na(data$dadeduc)&!is.na(data$momeduc),data$momeduc,data$dadeduc)))
head(data)
data<-moveMe(data,c("pareduc"),"after","dadeduc") #move pareduc to right aver dadeduc
source("moveMe.R")
source("moveMe.R")
data<-moveMe(data,c("pareduc"),"after","dadeduc") #move pareduc to right aver dadeduc
data<-moveMe(data,c("age12"),"after","age11") #move pareduc to right aver dadeduc
head(data)
data<-subset(data,select=-c(1))
temp<-data[1,] #parcoords wont work if first row contains NA, so swap first complete case (row 10) with row 1
data[1,]<-data[10,]
data[10,]<-temp
head(data)
data[1,]
y2pals=read.csv(file="~/Desktop/Analysis/PS_Data/SAS_MI/PALSYR2.csv") #grab y2 pals data
names(y2pals)[1] <- "id" #rename "id" so that it matches var name in pals data
data <- full_join(data,y2pals,by="id")
write.csv(data,file="ABCY1Y2MIPALS.csv")
shiny::runApp()
shiny::runApp()
shiny::runApp()
library(BayesFactor)
setwd("~/Desktop/Analysis/TEMA_BF")
data=read.csv(file="~/Desktop/Analysis/TEMA_BF/ABCY1Y2MIPALS.csv")
dev.off()
rm(list=ls())
library(BayesFactor)
setwd("~/Desktop/Analysis/TEMA_BF")
data=read.csv(file="~/Desktop/Analysis/TEMA_BF/ABCY1Y2MIPALS.csv")
data$y1dqdaccT1=data$y1dqdaccT1/100
data$y1dqdaccT2=data$y1dqdaccT2/100
data$y2dqdaccT1=data$y2dqdaccT1/100
data$y2dqdaccT2=data$y2dqdaccT2/100
data$y1cqdT1=data$y1cqdT1/100
data$y1cqdT2=data$y1cqdT2/100
data$y2cqdT1=data$y2cqdT1/100
data$y2cqdT2=data$y2cqdT2/100
data$y1ef=round(data$y1ef,0)/100
data$y2ef=round(data$y2ef,0)/100
data$PALS=data$PALS/max(data$PALS)
data$FSIQ=data$FSIQ/max(data$FSIQ)
data$y1temaprop <-round(data$y1temaraw,0)/max(round(data$y1temaraw,0))
data$y2temaprop <-round(data$y2temaraw,0)/max(round(data$y2temaraw,0))
dataSub<-subset(data,select=c(y1temaprop,y1dqdaccT1,y1cqdT1,FSIQ,y1ef))
dataSub<-subset(data,select=c(y1temaprop,y1dqdaccT1,y1cqdT1,FSIQ,y1ef,pareduc,y1gnT1))
dataSub<-na.omit(dataSub)
dim(dataSub)
bf.y1T1=regressionBF(y1temaprop~., data=dataSub)
dev.off()
length(bf.y1T1)
head(bf.y1T1,n=6)
which.max(bf.y1T1)
plot(head(bf.y1T1)/max(bf.y1T1))
plot(regressionBF(y1temaprop~., data=dataSub,whichModels="bottom"))
dataSub<-subset(data,select=c(y1temaprop,y1dqdaccT1,y1cqdT1,FSIQ,y1ef,y1gnT1,pareduc,sex))
dataSub<-subset(data,select=c(y1temaprop,y1dqdaccT1,y1cqdT1,FSIQ,y1ef,y1gnT1,pareduc,sex1))
dataSub<-na.omit(dataSub)
dim(dataSub)
bf.y1T1=generalTestBF(y1temaprop~y1dqdaccT1*y1cqdT1*FSIQ*y1ef+pareduc+sex1, data=dataSub)
bf.y1T1=generalTestBF(y1temaprop~y1dqdaccT1:y1cqdT1:FSIQ:y1ef+y1dqdaccT1+y1cqdT1+FSIQ+y1ef+pareduc+sex1, data=dataSub)
length(bf.y1T1)
head(bf.y1T1,n=6)
head(bf.y1T1,n=30)
head(bf.y1T1,n=10)
which.max(bf.y1T1)
dataSub<-subset(data,select=c(y1temaprop,y1dqdaccT1,y1cqdT1,FSIQ,y1ef,y1gnT1,pareduc,sex1))
dataSub<-na.omit(dataSub)
dim(dataSub)
bf.y1T1=generalTestBF(y1temaprop~y1dqdaccT1:y1cqdT1:FSIQ:y1ef+y1dqdaccT1+y1cqdT1+FSIQ+y1ef+y1gnT1+pareduc+sex1, data=dataSub)
length(bf.y1T1)
head(bf.y1T1,n=10)
which.max(bf.y1T1)
plot(head(bf.y1T1)/max(bf.y1T1))
head(bf.y1T1)
plot(head(bf.y1T1)/max(bf.y1T1))
plot(generalTestBF(y1temaprop~y1dqdaccT1*y1cqdT1*FSIQ*y1ef, data=dataSub,whichModels="top"))
plot(generalTestBF(y1temaprop~y1dqdaccT1:y1cqdT1:FSIQ:y1ef+y1dqdaccT1+y1cqdT1+FSIQ+y1ef+y1gnT1+pareduc+sex1, data=dataSub,whichModels="top"))
plot(generalTestBF(y1temaprop~y1dqdaccT1:y1cqdT1:FSIQ:y1ef+y1dqdaccT1+y1cqdT1+FSIQ+y1ef+y1gnT1+pareduc+sex1, data=dataSub,whichModels="bottom"))
dataSub<-subset(data,select=c(y1temaprop,y1dqdaccT1,y1cqdT1,FSIQ,y1ef,pareduc,sex1))
dataSub<-na.omit(dataSub)
dim(dataSub)
bf.y1T1=generalTestBF(y1temaprop~y1dqdaccT1:y1cqdT1:FSIQ:y1ef+y1dqdaccT1+y1cqdT1+FSIQ+y1ef+pareduc+sex1, data=dataSub)
length(bf.y1T1)
head(bf.y1T1,n=10)
which.max(bf.y1T1)
plot(head(bf.y1T1)/max(bf.y1T1))
plot(head(bf.y1T1)/max(bf.y1T1))
dataSub<-subset(data,select=c(y1temaprop,y1dqdaccT1,y1cqdT1,FSIQ,y1ef,pareduc,sex1))
dataSub<-na.omit(dataSub)
dim(dataSub)
bf.y1T1=generalTestBF(y1temaprop~y1dqdaccT1:y1cqdT1:FSIQ:y1ef+y1dqdaccT1+y1cqdT1+FSIQ+y1ef+pareduc+sex1, data=dataSub)
length(bf.y1T1)
head(bf.y1T1,n=10)
which.max(bf.y1T1)
plot(head(bf.y1T1)/max(bf.y1T1))
dataSub<-subset(data,select=c(y1temaprop,y1dqdaccT1,y1cqdT1,FSIQ,y1ef,pareduc,sex1))
dataSub<-na.omit(dataSub)
dim(dataSub)
bf.y1T1=generalTestBF(y1temaprop~y1dqdaccT1:y1cqdT1:FSIQ:y1ef+y1dqdaccT1:y1cqdT1:FSIQ+y1dqdaccT1:y1cqdT1:y1ef+y1dqdaccT1+y1cqdT1+FSIQ+y1ef+pareduc+sex1, data=dataSub)
length(bf.y1T1)
head(bf.y1T1,n=10)
which.max(bf.y1T1)
plot(head(bf.y1T1)/max(bf.y1T1))
plot(generalTestBF(y1temaprop~y1dqdaccT1:y1cqdT1:FSIQ:y1ef+y1dqdaccT1:y1cqdT1:FSIQ+y1dqdaccT1:y1cqdT1:y1ef+y1dqdaccT1+y1cqdT1+FSIQ+y1ef+pareduc+sex1, data=dataSub,whichModels="top"))
plot(generalTestBF(y1temaprop~y1dqdaccT1 + y1cqdT1 + FSIQ + pareduc, data=dataSub,whichModels="top"))
dev.off()
library(BayesFactor)
setwd("~/Desktop/Analysis/TEMA_BF")
data=read.csv(file="~/Desktop/Analysis/TEMA_BF/ABCY1Y2MIPALS.csv")
#convert into proportion scores
data$y1dqdaccT1=data$y1dqdaccT1/100
data$y1dqdaccT2=data$y1dqdaccT2/100
data$y2dqdaccT1=data$y2dqdaccT1/100
data$y2dqdaccT2=data$y2dqdaccT2/100
data$y1cqdT1=data$y1cqdT1/100
data$y1cqdT2=data$y1cqdT2/100
data$y2cqdT1=data$y2cqdT1/100
data$y2cqdT2=data$y2cqdT2/100
data$y1ef=round(data$y1ef,0)/100
data$y2ef=round(data$y2ef,0)/100
data$PALS=data$PALS/max(data$PALS)
data$FSIQ=data$FSIQ/max(data$FSIQ)
data$y1temaprop <-round(data$y1temaraw,0)/max(round(data$y1temaraw,0))
data$y2temaprop <-round(data$y2temaraw,0)/max(round(data$y2temaraw,0))
#y1T1 data subset, interaction terms and giveN
dataSub<-subset(data,select=c(y1temaprop,y1dqdaccT1,y1cqdT1,FSIQ,y1ef,y1gnT1,pareduc,sex1))
dataSub<-na.omit(dataSub)
dim(dataSub)
head(data)
sum(is.na(data$childeth))
sum(is.na(data$chilrace))
sum(is.na(data$childrace))
table(data$childrace)
table(data$childeth)
data$y1ef
library(BayesFactor)
setwd("~/Desktop/Analysis/TEMA_BF")
data=read.csv(file="~/Desktop/Analysis/TEMA_BF/ABCY1Y2MIPALS.csv")
data$y1ef
range(data$y1ef)
range(data$y2ef)
#convert into proportion scores
data$y1dqdaccT1=data$y1dqdaccT1/100
data$y1dqdaccT2=data$y1dqdaccT2/100
data$y2dqdaccT1=data$y2dqdaccT1/100
data$y2dqdaccT2=data$y2dqdaccT2/100
data$y1cqdT1=data$y1cqdT1/100
data$y1cqdT2=data$y1cqdT2/100
data$y2cqdT1=data$y2cqdT1/100
data$y2cqdT2=data$y2cqdT2/100
data$y1ef=round(data$y1ef,0)/70
data$y2ef=round(data$y2ef,0)/70
data$PALS=data$PALS/max(data$PALS)
data$FSIQ=data$FSIQ/max(data$FSIQ)
data$y1temaprop <-round(data$y1temaraw,0)/max(round(data$y1temaraw,0))
data$y2temaprop <-round(data$y2temaraw,0)/max(round(data$y2temaraw,0))
dataSub<-subset(data,select=c(y1temaprop,y1dqdaccT1,y1cqdT1,FSIQ,y1ef,y1gnT1,pareduc,sex1,childrace))
dataSub<-na.omit(dataSub)
dim(dataSub)
bf.y1T1=generalTestBF(y1temaprop~y1dqdaccT1+y1cqdT1+FSIQ+y1ef+y1gnT1+pareduc+sex1+childrace, data=dataSub)
length(bf.y1T1)
head(bf.y1T1,n=10)
dataSub<-subset(data,select=c(y1temaprop,y1dqdaccT1,y1cqdT1,FSIQ,y1ef,pareduc,sex1,childrace))
dataSub<-na.omit(dataSub)
dim(dataSub)
bf.y1T1=generalTestBF(y1temaprop~y1dqdaccT1+y1cqdT1+FSIQ+y1ef+pareduc+sex1+childrace, data=dataSub)
length(bf.y1T1)
head(bf.y1T1,n=10)
dataSub<-subset(data,select=c(y1temaprop,y1dqdaccT1,y1cqdT1,FSIQ,y1ef,pareduc,sex1,childrace))
dataSub<-na.omit(dataSub)
dim(dataSub)
bf.y1T1=generalTestBF(y1temaprop~y1dqdaccT1+y1cqdT1+FSIQ+y1ef+pareduc+sex1+childrace, data=dataSub)
length(bf.y1T1)
head(bf.y1T1,n=10)
plot(head(bf.y1T1)/max(bf.y1T1))
plot(head(bf.y1T1)/max(bf.y1T1),xlim=c(1/5,1))
plot(head(bf.y1T1)/max(bf.y1T1),xlim=c(.5,1))
?plot
plot(head(bf.y1T1)/max(bf.y1T1),xlim=c(.5,1))
plot.window(xlim=c(.5,1))
plot.window(xlim=c(.5,1),ylim=c(0,6))
plot(head(bf.y1T1)/max(bf.y1T1),add=T)
plot.window(xlim=c(.3,1),ylim=c(0,6))
plot(head(bf.y1T1)/max(bf.y1T1),add=T)
plot(head(bf.y1T1)/max(bf.y1T1),add=TRUE)
plot(head(bf.y1T1)/max(bf.y1T1),add="TRUE")
plot.window(xlim=c(.3,1),ylim=c(0,6))
dev.off()
plot.window(xlim=c(.3,1),ylim=c(0,6))
plot(head(bf.y1T1)/max(bf.y1T1),add="TRUE")
plot.window(xlim=c(.3,1),ylim=c(0,6))
plot(head(bf.y1T1)/max(bf.y1T1),add="TRUE")
plot.window(xlim=c(.3,1),ylim=c(0,10))
plot(head(bf.y1T1)/max(bf.y1T1),add="TRUE")
dev.off()
plot.window(xlim=c(.3,1),ylim=c(0,10))
plot(head(bf.y1T1)/max(bf.y1T1),add="TRUE")
plot.window(xlim=c(.3,1),ylim=c(0,10))
dataSub<-subset(data,select=c(y1temaprop,y1dqdaccT1,y1cqdT1,FSIQ,y1ef,pareduc,sex1,childrace,y1gnT1))
dataSub<-na.omit(dataSub)
dim(dataSub)
bf.y1T1=generalTestBF(y1temaprop~y1dqdaccT1+y1cqdT1+FSIQ+y1ef+pareduc+sex1+childrace+y1gnT1, data=dataSub)
length(bf.y1T1)
head(bf.y1T1,n=10)
plot(generalTestBF(y1temaprop~y1dqdaccT1+y1cqdT1+FSIQ+y1ef+pareduc+sex1+childrace, data=dataSub,whichModels="top"))
plot(generalTestBF(y1temaprop~y1dqdaccT1+y1cqdT1+FSIQ+y1ef+pareduc, data=dataSub,whichModels="top"))
plot(generalTestBF(y1temaprop~y1dqdaccT1+y1cqdT1+FSIQ+y1ef, data=dataSub,whichModels="top"))
plot(generalTestBF(y1temaprop~y1dqdaccT1+y1cqdT1+FSIQ+y1ef+pareduc+sex1+childrace, data=dataSub,whichModels="top"))
dataSub<-subset(data,select=c(y1temaprop,y1dqdaccT1,y1cqdT1,FSIQ,y1ef,pareduc,sex1,childrace,y1gnT1))
dataSub<-na.omit(dataSub)
dim(dataSub)
bf.y1T1=generalTestBF(y1temaprop~y1dqdaccT1+y1cqdT1+FSIQ+y1ef+pareduc+sex1+childrace+y1gnT1, data=dataSub)
length(bf.y1T1)
head(bf.y1T1,n=10)
plot(head(bf.y1T1)/max(bf.y1T1))
plot(generalTestBF(y1temaprop~y1dqdaccT1+y1cqdT1+FSIQ+y1ef+pareduc+sex1+childrace+y1gnT1, data=dataSub,whichModels="top"))
dataSub<-subset(data,select=c(y1temaprop,y1dqdaccT1,y1cqdT1,FSIQ,y1ef,pareduc,sex1,childrace))
dataSub<-na.omit(dataSub)
dim(dataSub)
bf.y1T1=generalTestBF(y1temaprop~y1dqdaccT1:y1cqdT1:FSIQ:y1ef+y1dqdaccT1:y1cqdT1:FSIQ+y1dqdaccT1:y1cqdT1:y1ef+y1dqdaccT1+y1cqdT1+FSIQ+y1ef+pareduc+sex1+childrace, data=dataSub)
length(bf.y1T1)
head(bf.y1T1,n=10)
plot(head(bf.y1T1)/max(bf.y1T1))
plot(generalTestBF(y1temaprop~y1dqdaccT1:y1cqdT1:FSIQ:y1ef+y1dqdaccT1:y1cqdT1:FSIQ+y1dqdaccT1:y1cqdT1:y1ef+y1dqdaccT1y1dqdaccT1+y1cqdT1+FSIQ+y1ef+pareduc+sex1+childrace, data=dataSub,whichModels="top"))
plot(generalTestBF(y1temaprop~y1dqdaccT1:y1cqdT1:FSIQ:y1ef+y1dqdaccT1:y1cqdT1:FSIQ+y1dqdaccT1:y1cqdT1:y1ef+y1dqdaccT1+y1cqdT1+FSIQ+y1ef+pareduc+sex1+childrace, data=dataSub,whichModels="top"))
#y1T2 data subset, no interaction terms, no giveN
dataSub<-subset(data,select=c(y1temaprop,y1dqdaccT2,y1cqdT2,FSIQ,y1ef,pareduc,sex1,childrace))
dataSub<-na.omit(dataSub)
dim(dataSub)
bf.y1T2=generalTestBF(y1temaprop~y1dqdaccT2+y1cqdT2+FSIQ+y1ef+pareduc+sex1+childrace, data=dataSub)
length(bf.y1T2)
head(bf.y1T2,n=10)
plot(head(bf.y1T2)/max(bf.y1T2))
plot(generalTestBF(y1temaprop~y1dqdaccT2+y1cqdT2+FSIQ+y1ef+pareduc+sex1+childrace, data=dataSub,whichModels="top"))
dataSub<-subset(data,select=c(y1temaprop,y1dqdaccT2,y1cqdT2,FSIQ,y1ef,pareduc,sex1,childrace,y1gnT2))
dataSub<-na.omit(dataSub)
dim(dataSub)
bf.y1T2=generalTestBF(y1temaprop~y1dqdaccT2+y1cqdT2+FSIQ+y1ef+pareduc+sex1+childrace+y1gnT2, data=dataSub)
length(bf.y1T2)
head(bf.y1T2,n=10)
plot(head(bf.y1T2)/max(bf.y1T2))
plot(generalTestBF(y1temaprop~y1dqdaccT2+y1cqdT2+FSIQ+y1ef+pareduc+sex1+childrace+y1gnT2, data=dataSub,whichModels="top"))
dataSub<-subset(data,select=c(y1temaprop,y1dqdaccT2,y1cqdT2,FSIQ,y1ef,pareduc,sex1,childrace))
dataSub<-na.omit(dataSub)
dim(dataSub)
bf.y1T2=generalTestBF(y1temaprop~y1dqdaccT2:y1cqdT2:FSIQ:y1ef+y1dqdaccT2:y1cqdT2:FSIQ+y1dqdaccT2:y1cqdT2:y1ef+y1dqdaccT2+y1cqdT2+FSIQ+y1ef+pareduc+sex1+childrace, data=dataSub)
length(bf.y1T2)
head(bf.y1T2,n=10)
plot(head(bf.y1T2)/max(bf.y1T2))
plot(generalTestBF(y1temaprop~y1dqdaccT2:y1cqdT2:FSIQ:y1ef+y1dqdaccT2:y1cqdT2:FSIQ+y1dqdaccT2:y1cqdT2:y1ef+y1dqdaccT2+y1cqdT2+FSIQ+y1ef+pareduc+sex1+childrace, data=dataSub,whichModels="top"))
head(bf.y1T2,n=30)
grep("y1dqdaccT2:y1cqdT2:FSIQ:y1ef",head(bf.y1T2,n=30))
grep(head(bf.y1T2,n=30),"y1dqdaccT2:y1cqdT2:FSIQ:y1ef",)
grep(head(bf.y1T2,n=30),"y1dqdaccT2:y1cqdT2:FSIQ:y1ef")
grep(head(bf.y1T2,n=200),"y1dqdaccT2:y1cqdT2:FSIQ:y1ef")
#y2T1 data subset, no interaction terms, no giveN
dataSub<-subset(data,select=c(y2temaprop,y2dqdaccT1,y2cqdT1,FSIQ,y2ef,pareduc,sex1,childrace))
dataSub<-na.omit(dataSub)
dim(dataSub)
bf.y2T1=generalTestBF(y2temaprop~y2dqdaccT1+y2cqdT1+FSIQ+y2ef+pareduc+sex1+childrace, data=dataSub)
length(bf.y2T1)
head(bf.y2T1,n=10)
dev.off()
plot(head(bf.y2T1)/max(bf.y2T1))
plot(generalTestBF(y2temaprop~y2dqdaccT1+y2cqdT1+FSIQ+y2ef+pareduc+sex1+childrace+y2gnT1, data=dataSub,whichModels="top"))
plot(generalTestBF(y2temaprop~y2dqdaccT1+y2cqdT1+FSIQ+y2ef+pareduc+sex1+childrace, data=dataSub,whichModels="top"))
dataSub<-subset(data,select=c(y2temaprop,y2dqdaccT1,y2cqdT1,FSIQ,y2ef,pareduc,sex1,childrace))
dataSub<-subset(data,select=c(y2temaprop,y2dqdaccT1,y2cqdT1,FSIQ,y2ef,pareduc,sex1,childrace,y2gnT1))
dataSub<-na.omit(dataSub)
dim(dataSub)
bf.y2T1=generalTestBF(y2temaprop~y2dqdaccT1+y2cqdT1+FSIQ+y2ef+pareduc+sex1+childrace+y2gnT1, data=dataSub)
length(bf.y2T1)
head(bf.y2T1,n=10)
plot(head(bf.y2T1)/max(bf.y2T1))
plot(generalTestBF(y2temaprop~y2dqdaccT1:y2cqdT1:FSIQ:y2ef+y2dqdaccT1:y2cqdT1:FSIQ+y2dqdaccT1:y2cqdT1:y2ef+y2dqdaccT1+y2cqdT1+FSIQ+y2ef+pareduc+sex1+childrace, data=dataSub,whichModels="top"))
plot(generalTestBF(y2temaprop~y2dqdaccT1+y2cqdT1+FSIQ+y2ef+pareduc+sex1+childrace+y2gnT1, data=dataSub,whichModels="top"))
plot(generalTestBF(y2temaprop~y2dqdaccT1+y2cqdT1+FSIQ+y2ef+pareduc+sex1+childrace+y2gnT1, data=dataSub,whichModels="top"))
dataSub<-subset(data,select=c(y2temaprop,y2dqdaccT1,y2cqdT1,FSIQ,y2ef,pareduc,sex1,childrace))
dataSub<-na.omit(dataSub)
dim(dataSub)
bf.y2T1=generalTestBF(y2temaprop~y2dqdaccT1:y2cqdT1:FSIQ:y2ef+y2dqdaccT1:y2cqdT1:FSIQ+y2dqdaccT1:y2cqdT1:y2ef+y2dqdaccT1+y2cqdT1+FSIQ+y2ef+pareduc+sex1+childrace, data=dataSub)
length(bf.y2T1)
head(bf.y2T1,n=10)
plot(head(bf.y2T1)/max(bf.y2T1))
plot(generalTestBF(y2temaprop~y2dqdaccT1:y2cqdT1:FSIQ:y2ef+y2dqdaccT1:y2cqdT1:FSIQ+y2dqdaccT1:y2cqdT1:y2ef+y2dqdaccT1+y2cqdT1+FSIQ+y2ef+pareduc+sex1+childrace, data=dataSub,whichModels="top"))
####################### y2T2 ######################
#y2T2 data subset, no interaction terms, no giveN
dataSub<-subset(data,select=c(y2temaprop,y2dqdaccT2,y2cqdT2,FSIQ,y2ef,pareduc,sex1,childrace))
dataSub<-na.omit(dataSub)
dim(dataSub)
bf.y2T2=generalTestBF(y2temaprop~y2dqdaccT2+y2cqdT2+FSIQ+y2ef+pareduc+sex1+childrace, data=dataSub)
length(bf.y2T2)
head(bf.y2T2,n=10)
plot(head(bf.y2T2)/max(bf.y2T2))
plot(generalTestBF(y2temaprop~y2dqdaccT2+y2cqdT2+FSIQ+y2ef+pareduc+sex1+childrace, data=dataSub,whichModels="top"))
dataSub<-subset(data,select=c(y2temaprop,y2dqdaccT2,y2cqdT2,FSIQ,y2ef,pareduc,sex1,childrace,y2gnT2))
dataSub<-na.omit(dataSub)
dim(dataSub)
bf.y2T2=generalTestBF(y2temaprop~y2dqdaccT2+y2cqdT2+FSIQ+y2ef+pareduc+sex1+childrace+y2gnT2, data=dataSub)
length(bf.y2T2)
head(bf.y2T2,n=10)
?boxplot
boxplot(c(data$y1gnT1,data$y1gnT2,data$y2gnT1,data$y2gnT2))
boxplot(data$y1gnT1,data$y1gnT2,data$y2gnT1,data$y2gnT2)
plot(head(bf.y2T2)/max(bf.y2T2))
plot(generalTestBF(y2temaprop~y2dqdaccT2+y2cqdT2+FSIQ+y2ef+pareduc+sex1+childrace+y2gnT2, data=dataSub,whichModels="top"))
#y2T2 data subset, no giveN, with interaction terms
dataSub<-subset(data,select=c(y2temaprop,y2dqdaccT2,y2cqdT2,FSIQ,y2ef,pareduc,sex1,childrace))
dataSub<-na.omit(dataSub)
dim(dataSub)
bf.y2T2=generalTestBF(y2temaprop~y2dqdaccT2:y2cqdT2:FSIQ:y2ef+y2dqdaccT2:y2cqdT2:FSIQ+y2dqdaccT2:y2cqdT2:y2ef+y2dqdaccT2+y2cqdT2+FSIQ+y2ef+pareduc+sex1+childrace, data=dataSub)
length(bf.y2T2)
head(bf.y2T2,n=30)
plot(head(bf.y2T2)/max(bf.y2T2))
plot(generalTestBF(y2temaprop~y2dqdaccT2:y2cqdT2:FSIQ:y2ef+y2dqdaccT2:y2cqdT2:FSIQ+y2dqdaccT2:y2cqdT2:y2ef+y2dqdaccT2+y2cqdT2+FSIQ+y2ef+pareduc+sex1+childrace, data=dataSub,whichModels="top"))
shiny::runApp('~/Desktop/Analysis/parcoordsPlotter')
shiny::runApp('~/Desktop/Analysis/parcoordsPlotter')
shiny::runApp('~/Desktop/Analysis/parcoordsPlotter')
shiny::runApp('~/Desktop/Analysis/shinyapps/fileinput')
shiny::runApp('~/Desktop/Analysis/shinyapps/fileinput')
shiny::runApp('~/Desktop/Analysis/shinyapps/fileinput')
shiny::runApp('~/Desktop/Analysis/shinyapps/fileinput')
shiny::runApp('~/Desktop/Analysis/shinyapps/fileinput')
shiny::runApp('~/Desktop/Analysis/parcoordsPlotter')
dat<-read.csv(file="~/Desktop/Analysis/mtcars.csv")
data$X
head(data)
head(dat)
head(dat)
head(dat$X)
shiny::runApp('~/Desktop/Analysis/parcoordsPlotter')
shiny::runApp('~/Desktop/Analysis/parcoordsPlotter')
shiny::runApp('~/Desktop/Analysis/parcoordsPlotter')
shiny::runApp('~/Desktop/Analysis/parcoordsPlotter')
shiny::runApp('~/Desktop/Analysis/parcoordsPlotter')
shiny::runApp('~/Desktop/Analysis/parcoordsPlotter')
shiny::runApp('~/Desktop/Analysis/parcoordsPlotter')
shiny::runApp('~/Desktop/Analysis/parcoordsPlotter')
shiny::runApp('~/Desktop/Analysis/parcoordsPlotter')
shiny::runApp('~/Desktop/Analysis/parcoordsPlotter')
shiny::runApp('~/Desktop/Analysis/parcoordsPlotter')
shiny::runApp('~/Desktop/Analysis/parcoordsPlotter')
shiny::runApp('~/Desktop/Analysis/parcoordsPlotter')
shiny::runApp('~/Desktop/Analysis/parcoordsPlotter')
shiny::runApp('~/Desktop/Analysis/parcoordsPlotter')
rm(list=ls())
dev.off()
shiny::runApp('~/Desktop/Analysis/parcoordsPlotter')
shiny::runApp('~/Desktop/Analysis/parcoordsPlotter')
shiny::runApp('~/Desktop/Analysis/parcoordsPlotter')
shiny::runApp('~/Desktop/Analysis/parcoordsPlotter')
shiny::runApp('~/Desktop/Analysis/parcoordsPlotter')
dat<-read.csv(file="~/Desktop/Analysis/mtcars.csv")
head(dat)
table(dat$X)
shiny::runApp('~/Desktop/Analysis/parcoordsPlotter')
shiny::runApp('~/Desktop/Analysis/parcoordsPlotter')
shiny::runApp('~/Desktop/Analysis/parcoordsPlotter')
shiny::runApp('~/Desktop/Analysis/parcoordsPlotter')
shiny::runApp('~/Desktop/Analysis/parcoordsPlotter')
shiny::runApp('~/Desktop/Analysis/parcoordsPlotter')
shiny::runApp('~/Desktop/Analysis/parcoordsPlotter')
shiny::runApp('~/Desktop/Analysis/parcoordsPlotter')
shinyapps::deployApp(~Desktop/Analysis/parcoordsPlotter)
shinyapps::deployApp("~Desktop/Analysis/parcoordsPlotter")
setwd("~Desktop/Analysis/parcoordsPlotter")
setwd("~/Desktop/Analysis/parcoordsPlotter")
shinyapps::deployApp("~/Desktop/Analysis/parcoordsPlotter")
shiny::runApp()
shiny::runApp()
shiny::runApp()
showLogs()
shinyapps::showLogs()
shiny::runApp('~/Desktop/Analysis/PS_Parcoords')
shiny::runApp()
shiny::runApp()
shiny::runApp()
